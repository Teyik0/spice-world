name: Setup Reusable Workflow

on:
  workflow_call:
    inputs:
      restore-keys:
        description: "Restore keys for cache"
        required: false
        type: string
        default: ${{ runner.os }}-bun-
      bun-version:
        description: "Bun version to use"
        required: false
        type: string
        default: "latest"
      install-dependencies:
        description: "Whether to install dependencies"
        required: false
        type: boolean
        default: true
    outputs:
      cache-hit:
        description: "Whether dependencies were restored from cache"
        value: ${{ jobs.setup.outputs.cache-hit }}

jobs:
  setup:
    name: Setup Project
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache-deps.outputs.cache-hit }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ inputs.bun-version }}

      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock', '**/package.json') }}
          restore-keys: ${{ runner.os }}-bun-

      - name: Install dependencies
        if: inputs.install-dependencies && steps.cache-deps.outputs.cache-hit != 'true'
        run: bun install --frozen-lockfile

      - name: Display setup summary
        run: |
          echo "ðŸ”§ Setup Summary:"
          echo "- Bun version: ${{ inputs.bun-version }}"
          echo "- Cache hit: ${{ steps.cache-deps.outputs.cache-hit }}"
          echo "- Dependencies installed: ${{ inputs.install-dependencies && steps.cache-deps.outputs.cache-hit != 'true' }}"
