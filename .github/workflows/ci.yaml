name: CI Pipeline

on:
  pull_request:
    branches: [dev]

jobs:
  setup:
    name: Setup Project
    uses: ./.github/workflows/setup-wc.yaml
    with:
      bun-version: latest
      install-dependencies: true

  lint:
    name: Lint & format check
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: ./.github/workflows/setup-wc.yml
        with:
          bun-version: latest
          install-dependencies: true

      - name: Run ultracite linting
        run: bunx ultracite check

  typecheck:
    name: TypeScript type check
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: ./.github/workflows/setup-wc.yml
        with:
          bun-version: latest
          install-dependencies: true

      - name: Generate prisma client
        working-directory: apps/server
        run: bunx prisma generate

      - name: Type check workspace
        working-directory: ${{ matrix.workspace }}
        run: bunx tsc --build --noEmit

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: ./.github/workflows/setup-wc.yml
        with:
          bun-version: latest
          install-dependencies: true

      - name: Setup test database
        run: docker compose up -d postresdb

      - name: Setup test database
        working-directory: apps/server
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
        run: |
          bunx prisma generate
          bunx prisma db push

      - name: Run server tests
        working-directory: apps/server
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
          UPLOADTHING_TOKEN: ${{ secrets.UPLOADTHING_TOKEN }}
          BETTER_AUTH_SECRET: ${{ secrets.BETTER_AUTH_SECRET }}
          BETTER_AUTH_URL: http://localhost:3000
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
        run: bun run test

  build:
    name: Build Applications
    runs-on: ubuntu-latest
    needs: [setup, lint, typecheck, test]
    strategy:
      matrix:
        workspace:
          - apps/server
          - apps/dashboard
          - packages/emails
    steps:
      - uses: ./.github/workflows/setup-wc.yml
        with:
          bun-version: latest
          install-dependencies: true

      - name: Generate prisma client
        if: matrix.workspace == 'apps/server'
        working-directory: ${{ matrix.workspace }}
        run: bunx prisma generate

      - name: Build ${{ matrix.workspace }}
        working-directory: ${{ matrix.workspace }}
        run: bun run build
